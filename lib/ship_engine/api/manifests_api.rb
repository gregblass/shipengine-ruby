=begin
#ShipEngine

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require "uri"

module ShipEngine
  class ManifestsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # 
    # 
    # @param request 
    # @param [Hash] opts the optional parameters
    # @return [Manifest]
    def create(request, opts = {})
      data, _status_code, _headers = create_with_http_info(request, opts)
      return data
    end

    # 
    # 
    # @param request 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Manifest, Fixnum, Hash)>] Manifest data, response status code and response headers
    def create_with_http_info(request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ManifestsApi.create ..."
      end
      # verify the required parameter 'request' is set
      if @api_client.config.client_side_validation && request.nil?
        fail ArgumentError, "Missing the required parameter 'request' when calling ManifestsApi.create"
      end
      # resource path
      local_var_path = "/v1/manifests"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'text/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(request)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Manifest')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ManifestsApi#create\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # 
    # @param manifest_id 
    # @param [Hash] opts the optional parameters
    # @return [Manifest]
    def get(manifest_id, opts = {})
      data, _status_code, _headers = get_with_http_info(manifest_id, opts)
      return data
    end

    # 
    # 
    # @param manifest_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Manifest, Fixnum, Hash)>] Manifest data, response status code and response headers
    def get_with_http_info(manifest_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ManifestsApi.get ..."
      end
      # verify the required parameter 'manifest_id' is set
      if @api_client.config.client_side_validation && manifest_id.nil?
        fail ArgumentError, "Missing the required parameter 'manifest_id' when calling ManifestsApi.get"
      end
      # resource path
      local_var_path = "/v1/manifests/{manifest_id}".sub('{' + 'manifest_id' + '}', manifest_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Manifest')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ManifestsApi#get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :warehouse_id 
    # @option opts [DateTime] :ship_date_start 
    # @option opts [DateTime] :ship_date_end 
    # @option opts [DateTime] :created_at_start 
    # @option opts [DateTime] :created_at_end 
    # @option opts [String] :carrier_id 
    # @option opts [Integer] :page 
    # @option opts [Integer] :page_size 
    # @return [ManifestsListResponse]
    def list(opts = {})
      data, _status_code, _headers = list_with_http_info(opts)
      return data
    end

    # 
    # 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :warehouse_id 
    # @option opts [DateTime] :ship_date_start 
    # @option opts [DateTime] :ship_date_end 
    # @option opts [DateTime] :created_at_start 
    # @option opts [DateTime] :created_at_end 
    # @option opts [String] :carrier_id 
    # @option opts [Integer] :page 
    # @option opts [Integer] :page_size 
    # @return [Array<(ManifestsListResponse, Fixnum, Hash)>] ManifestsListResponse data, response status code and response headers
    def list_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ManifestsApi.list ..."
      end
      # resource path
      local_var_path = "/v1/manifests"

      # query parameters
      query_params = {}
      query_params[:'warehouse_id'] = opts[:'warehouse_id'] if !opts[:'warehouse_id'].nil?
      query_params[:'ship_date_start'] = opts[:'ship_date_start'] if !opts[:'ship_date_start'].nil?
      query_params[:'ship_date_end'] = opts[:'ship_date_end'] if !opts[:'ship_date_end'].nil?
      query_params[:'created_at_start'] = opts[:'created_at_start'] if !opts[:'created_at_start'].nil?
      query_params[:'created_at_end'] = opts[:'created_at_end'] if !opts[:'created_at_end'].nil?
      query_params[:'carrier_id'] = opts[:'carrier_id'] if !opts[:'carrier_id'].nil?
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ManifestsListResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ManifestsApi#list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
