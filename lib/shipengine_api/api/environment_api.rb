=begin
#ShipEngine

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1-SNAPSHOT

=end

require "uri"

module ShipEngineApi
  class EnvironmentApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # 
    # 
    # @param create_webhook_dto 
    # @param api_key API Key
    # @param [Hash] opts the optional parameters
    # @return [WebhookDTO]
    def environment_create_webhook(create_webhook_dto, api_key, opts = {})
      data, _status_code, _headers = environment_create_webhook_with_http_info(create_webhook_dto, api_key, opts)
      return data
    end

    # 
    # 
    # @param create_webhook_dto 
    # @param api_key API Key
    # @param [Hash] opts the optional parameters
    # @return [Array<(WebhookDTO, Fixnum, Hash)>] WebhookDTO data, response status code and response headers
    def environment_create_webhook_with_http_info(create_webhook_dto, api_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: EnvironmentApi.environment_create_webhook ..."
      end
      # verify the required parameter 'create_webhook_dto' is set
      if @api_client.config.client_side_validation && create_webhook_dto.nil?
        fail ArgumentError, "Missing the required parameter 'create_webhook_dto' when calling EnvironmentApi.environment_create_webhook"
      end
      # verify the required parameter 'api_key' is set
      if @api_client.config.client_side_validation && api_key.nil?
        fail ArgumentError, "Missing the required parameter 'api_key' when calling EnvironmentApi.environment_create_webhook"
      end
      # resource path
      local_var_path = "/v1/environment/webhooks"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'text/json'])
      header_params[:'api-key'] = api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(create_webhook_dto)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'WebhookDTO')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: EnvironmentApi#environment_create_webhook\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # 
    # @param webhook_id 
    # @param api_key API Key
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def environment_delete_webhook(webhook_id, api_key, opts = {})
      environment_delete_webhook_with_http_info(webhook_id, api_key, opts)
      return nil
    end

    # 
    # 
    # @param webhook_id 
    # @param api_key API Key
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def environment_delete_webhook_with_http_info(webhook_id, api_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: EnvironmentApi.environment_delete_webhook ..."
      end
      # verify the required parameter 'webhook_id' is set
      if @api_client.config.client_side_validation && webhook_id.nil?
        fail ArgumentError, "Missing the required parameter 'webhook_id' when calling EnvironmentApi.environment_delete_webhook"
      end
      # verify the required parameter 'api_key' is set
      if @api_client.config.client_side_validation && api_key.nil?
        fail ArgumentError, "Missing the required parameter 'api_key' when calling EnvironmentApi.environment_delete_webhook"
      end
      # resource path
      local_var_path = "/v1/environment/webhooks/{webhook_id}".sub('{' + 'webhook_id' + '}', webhook_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json'])
      header_params[:'api-key'] = api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: EnvironmentApi#environment_delete_webhook\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # 
    # @param webhook_id 
    # @param api_key API Key
    # @param [Hash] opts the optional parameters
    # @return [WebhookDTO]
    def environment_get_webhook_by_id(webhook_id, api_key, opts = {})
      data, _status_code, _headers = environment_get_webhook_by_id_with_http_info(webhook_id, api_key, opts)
      return data
    end

    # 
    # 
    # @param webhook_id 
    # @param api_key API Key
    # @param [Hash] opts the optional parameters
    # @return [Array<(WebhookDTO, Fixnum, Hash)>] WebhookDTO data, response status code and response headers
    def environment_get_webhook_by_id_with_http_info(webhook_id, api_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: EnvironmentApi.environment_get_webhook_by_id ..."
      end
      # verify the required parameter 'webhook_id' is set
      if @api_client.config.client_side_validation && webhook_id.nil?
        fail ArgumentError, "Missing the required parameter 'webhook_id' when calling EnvironmentApi.environment_get_webhook_by_id"
      end
      # verify the required parameter 'api_key' is set
      if @api_client.config.client_side_validation && api_key.nil?
        fail ArgumentError, "Missing the required parameter 'api_key' when calling EnvironmentApi.environment_get_webhook_by_id"
      end
      # resource path
      local_var_path = "/v1/environment/webhooks/{webhook_id}".sub('{' + 'webhook_id' + '}', webhook_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json'])
      header_params[:'api-key'] = api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'WebhookDTO')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: EnvironmentApi#environment_get_webhook_by_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # 
    # @param webhook_id 
    # @param update_webhook_dto 
    # @param api_key API Key
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def environment_update_webhook(webhook_id, update_webhook_dto, api_key, opts = {})
      environment_update_webhook_with_http_info(webhook_id, update_webhook_dto, api_key, opts)
      return nil
    end

    # 
    # 
    # @param webhook_id 
    # @param update_webhook_dto 
    # @param api_key API Key
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def environment_update_webhook_with_http_info(webhook_id, update_webhook_dto, api_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: EnvironmentApi.environment_update_webhook ..."
      end
      # verify the required parameter 'webhook_id' is set
      if @api_client.config.client_side_validation && webhook_id.nil?
        fail ArgumentError, "Missing the required parameter 'webhook_id' when calling EnvironmentApi.environment_update_webhook"
      end
      # verify the required parameter 'update_webhook_dto' is set
      if @api_client.config.client_side_validation && update_webhook_dto.nil?
        fail ArgumentError, "Missing the required parameter 'update_webhook_dto' when calling EnvironmentApi.environment_update_webhook"
      end
      # verify the required parameter 'api_key' is set
      if @api_client.config.client_side_validation && api_key.nil?
        fail ArgumentError, "Missing the required parameter 'api_key' when calling EnvironmentApi.environment_update_webhook"
      end
      # resource path
      local_var_path = "/v1/environment/webhooks/{webhook_id}".sub('{' + 'webhook_id' + '}', webhook_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'text/json'])
      header_params[:'api-key'] = api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(update_webhook_dto)
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: EnvironmentApi#environment_update_webhook\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # 
    # @param api_key API Key
    # @param [Hash] opts the optional parameters
    # @return [Array<WebhookDTO>]
    def environment_webhooks(api_key, opts = {})
      data, _status_code, _headers = environment_webhooks_with_http_info(api_key, opts)
      return data
    end

    # 
    # 
    # @param api_key API Key
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<WebhookDTO>, Fixnum, Hash)>] Array<WebhookDTO> data, response status code and response headers
    def environment_webhooks_with_http_info(api_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: EnvironmentApi.environment_webhooks ..."
      end
      # verify the required parameter 'api_key' is set
      if @api_client.config.client_side_validation && api_key.nil?
        fail ArgumentError, "Missing the required parameter 'api_key' when calling EnvironmentApi.environment_webhooks"
      end
      # resource path
      local_var_path = "/v1/environment/webhooks"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json'])
      header_params[:'api-key'] = api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<WebhookDTO>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: EnvironmentApi#environment_webhooks\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # 
    # 
    # @param api_key API Key
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def environment_whoami(api_key, opts = {})
      data, _status_code, _headers = environment_whoami_with_http_info(api_key, opts)
      return data
    end

    # 
    # 
    # @param api_key API Key
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Fixnum, Hash)>] Object data, response status code and response headers
    def environment_whoami_with_http_info(api_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: EnvironmentApi.environment_whoami ..."
      end
      # verify the required parameter 'api_key' is set
      if @api_client.config.client_side_validation && api_key.nil?
        fail ArgumentError, "Missing the required parameter 'api_key' when calling EnvironmentApi.environment_whoami"
      end
      # resource path
      local_var_path = "/v1/environment/whoami"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'text/json'])
      header_params[:'api-key'] = api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api-key']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Object')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: EnvironmentApi#environment_whoami\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
