=begin
#ShipEngine

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1-SNAPSHOT

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for ShipEngineApi::UPSAccountSettingsDTO
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'UPSAccountSettingsDTO' do
  before do
    # run before each test
    @instance = ShipEngineApi::UPSAccountSettingsDTO.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UPSAccountSettingsDTO' do
    it 'should create an instance of UPSAccountSettingsDTO' do
      expect(@instance).to be_instance_of(ShipEngineApi::UPSAccountSettingsDTO)
    end
  end
  describe 'test attribute "nickname"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "is_primary_account"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "pickup_type"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["dailyPickup", "occasionalPickup", "customerCounter"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.pickup_type = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "use_carbon_neutral_shipping_program"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "use_ground_freight_pricing"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "use_consolidation_services"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "use_order_number_on_mail_innovations_labels"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "mail_innovations_endorsement"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["none", "return_service_requested", "forwarding_service_requested", "address_service_requested", "change_service_requested", "leave_if_no_response"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.mail_innovations_endorsement = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "mail_innovations_cost_center"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "use_negotiated_rates"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "account_postal_code"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "invoice"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

