=begin
#ShipEngine

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for ShipEngine::PurchaseLabelRequest
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'PurchaseLabelRequest' do
  before do
    # run before each test
    @instance = ShipEngine::PurchaseLabelRequest.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PurchaseLabelRequest' do
    it 'should create an instance of PurchaseLabelRequest' do
      expect(@instance).to be_instance_of(ShipEngine::PurchaseLabelRequest)
    end
  end
  describe 'test attribute "shipment"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "label_format"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["pdf", "zpl", "png"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.label_format = value }.not_to raise_error
       #end
    end
  end

  describe 'test attribute "label_layout"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "test_label"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "validate_address"' do
    it 'should work' do
       # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
       #validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["noValidation", "validateOnly", "validateAndClean"])
       #validator.allowable_values.each do |value|
       #  expect { @instance.validate_address = value }.not_to raise_error
       #end
    end
  end

end

